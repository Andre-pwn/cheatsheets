FROM PORTSWIGGER ACADEMY - BURPSUITE CERTIFIED PREPARATION

SSTI
prova bypass filtro char alfanumerico con %0A

'"

SQL INJECTION

' or 1=1--

detection: 
  '
  or 1=1 or 1=2 per triggherare errori maybe
  sql specific syntax
  payloads with delay
  OAST payloads per triggerare out of band network interactions  https://portswigger.net/blog/oast-out-of-band-application-security-testing

WHERE e SELECT sono i punti vulnerabili più frequenti. altri possono essere:

UPDATE -> sui valori da aggiornare
INSERT -> sui valori da inserire
SELECT -> sul nome colonna
SELECT -> su order by

-- per commentare il seguito e non eseguirlo
es. https://insecure-website.com/products?category=Gifts'--

SUBVERTING APP LOGIC
se per loggare mi chede username e password, io commento dopo l'username così non chiede la password nella query
es. administrator'--
SELECT * FROM users WHERE username = 'administrator'--' AND password = ''

prendere dati da altre tabelle con UNION

blind SQL injection
non ritorna errori o risultati evidenti
di solito si cerca di sovvertire la logica applicativa per restituire risultati diversi da quelli aspettati, o tramite boolean conditions, triggerare delay con le funzioni di timer oppure OAST per generare traffico sulla rete detectabile

SECOND ORDER SQL INJECTION
