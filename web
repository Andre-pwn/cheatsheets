FROM PORTSWIGGER ACADEMY - BURPSUITE CERTIFIED PREPARATION

SSTI
prova bypass filtro char alfanumerico con %0A

'"

SQL INJECTION

' or 1=1--

detection: 
  '
  or 1=1 or 1=2 per triggherare errori maybe
  sql specific syntax
  payloads with delay
  OAST payloads per triggerare out of band network interactions  https://portswigger.net/blog/oast-out-of-band-application-security-testing

WHERE e SELECT sono i punti vulnerabili più frequenti. altri possono essere:

UPDATE -> sui valori da aggiornare
INSERT -> sui valori da inserire
SELECT -> sul nome colonna
SELECT -> su order by

-- per commentare il seguito e non eseguirlo
es. https://insecure-website.com/products?category=Gifts'--

SUBVERTING APP LOGIC
se per loggare mi chede username e password, io commento dopo l'username così non chiede la password nella query
es. administrator'--
SELECT * FROM users WHERE username = 'administrator'--' AND password = ''

prendere dati da altre tabelle con UNION
per union attacks ci sono 2 requisiti
1. conoscere il numero di colonne da chiamare
2. quali colonne della query originale sono suitable per contenere i risultati injectati dalla query

determinare il numero di colonne

' ORDER BY 1--
' ORDER BY 2--
' ORDER BY 3--
quando il numero eccede il numero di colonne da ritornare genera errore out of bound exception, errore generico, in alcuni casi errore http o altri casi no errori.

' UNION SELECT NULL--
' UNION SELECT NULL,NULL--
' UNION SELECT NULL,NULL,NULL--

stessa cosa ma se il numero di null non matcha il numero di colonne viene sempre restituito errore
bisogna capire bene la versione del databse e seguire i comandi specifici per ogni caso

' UNION SELECT 'a',NULL,NULL,NULL--
' UNION SELECT NULL,'a',NULL,NULL--
' UNION SELECT NULL,NULL,'a',NULL--
' UNION SELECT NULL,NULL,NULL,'a'--

utilizzabile per capire il tipo di dato, sperando che inserendo un char su un int generi errore



blind SQL injection
non ritorna errori o risultati evidenti
di solito si cerca di sovvertire la logica applicativa per restituire risultati diversi da quelli aspettati, o tramite boolean conditions, triggerare delay con le funzioni di timer oppure OAST per generare traffico sulla rete detectabile

SECOND ORDER SQL INJECTION

input viene salvato nel database e magari viene richiamato in altre funzioni ma non immediatamente, esempio stored xss
azione che viene eseguita con il payload caricato in precedenza tramite sqli

examining database version and stuff via specific commands and errors - consult cheatsheets such as https://portswigger.net/web-security/sql-injection/cheat-sheet and others

encode the payload in the way the requests are made, considering xml and json inputs

PREVENZIONE SQL INJECTION
query parametrizzate
esempio:

PreparedStatement statement = connection.prepareStatement("SELECT * FROM products WHERE category = ?");
statement.setString(1, input);
ResultSet resultSet = statement.executeQuery();

converti tutto a testo prima di eseguire 
