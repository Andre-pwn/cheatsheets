GENERIC
file <nomefile>
md5sum <nomefile>       #per recuperare l'hash md5
strings <nomefile>       #per leggere le stringhe del file
echo <text> | base64 -d      #b64  decode
find . -size 69632c -exec rm {nomefile} +       #filtrare rimuovendo file di dimensioni uguali a size
https://ezgif.com/       #slow down gifs
exiftool <nomefile>      #per estrarre i metadati
https://inloop.github.io/sqlite-viewer/       #sqlite viewer
https://www.igorware.com/file-joiner/download       #fjoiner per unire i file
sudo kpartx -a -v file.dd
hexeditor
https://en.wikipedia.org/wiki/List_of_file_signatures       #list of file signatures
lnkinfo -> analisi file lnk

email analysis https://www.encryptomatic.com/viewer/

testing PHP code con Postman:
  php file -> php -S 127.0.0.1:80 -> postman request a http://localhost/path/to/file


LD_PRELOAD - library linking process (https://abhijit-pal.medium.com/ld-preload-in-linux-a-powerful-tool-for-dynamic-library-interception-7f681d0b6556)



STEGO
https://github.com/zardus/ctf-tools/tree/master/stegsolve
https://www.georgeom.net/StegOnline/upload

PYTHON
https://github.com/extremecoders-re/pyinstxtractor       #per estrarre i file python compilati dal file binario
https://pypi.org/project/uncompyle6/ per decompilare il file .pyc

JAVA
https://visualvm.github.io/ visualvm       #per analizzare java hprof 

BINWALK
binwalk 
binwalk --extract --dd=".*" AGT.png 
#per estrarre tutti i file all'interno del file agt.png

GIT
ls -la -> .git folder
git log #mostra i commit
git show <commit_id> #dettagli commit

WINDOWS LOGS 
.evtx log windows con tool che esporta in xlsx per l'analisi (non evtxexport)
evtxexport -> https://manpages.ubuntu.com/manpages/focal/man1/evtxexport.1.html to parse evtx files
find . -type f -exec evtxexport {} ';' | less       #per leggere tutti i file da terminale

WIRESHARK
wireshark pcap files -> follow tcp/http stream
export objects per recuperare file

tshark -r capture.pcap -Tfields -e dns.qry.name > queries.txt #estrazione di richieste di un certo tipo, nell'esempio dns
cat queries.txt | uniq > dump.txt #rimuove i duplicati

https://github.com/brimdata/brimcap -> A command line utility for converting pcaps into the flexible, searchable Zed data formats as seen in the Zui desktop app and Zed commands.
https://www.netresec.com/?page=NetworkMiner


OLETOOLS MACRO
https://github.com/decalage2/oletools OLETOOLS
mraptor tool per verificare la presenza di macro all'interno dei file #esempio .docmù
oleid
olevba

VOLATILITY MEMORY DUMP
installation
https://seanthegeek.net/1172/how-to-install-volatility-2-and-volatility-3-on-debian-ubuntu-or-kali-linux/

volatility 2 -> vol.py
volatility3 -> volshell

vol-py -f filename imageinfo -> per trovare il profile (os)
vol-py -f filename --profile=profilename pslist/pstree (windows/linux)

  useful commands:
    imageinfo
    pslist / pstree
    filescan | grep filename
    dumpfiles -r regex --dump-dir dirname
    sockets
    consoles
    truecryptpassphrase (se c'è truecrypt tra i processi (?))

vol.py --profile=$PROFILE -f $MEMPATH dumpfiles -n -i -r \\.elf --dump-dir=$OUTDIR

-n : Use original file name in output
-r : Use regex
-i : Case insensitive

https://github.com/volatilityfoundation/volatility VOLATILITY
https://darkdefender.medium.com/write-up-memory-forensics-in-the-def-con-dfir-ctf-c2b50ed62c6b      #volatility stuff interessante
https://andreafortuna.org/2017/07/10/volatility-my-own-cheatsheet-part-3-process-memory/       #info utili
volatility per analizzare i memory dump
se ci sono profili nello zip copiarli con "sudo cp Ubuntu_4.15.0-184-generic_profile.zip /usr/local/lib/python2.7/dist-packages/volatility/plugins/overlays/linux/", poi con "vol.py --info" dovrebbero essere disponibili
"vol.py --profile LinuxUbuntu_4_15_0-184-generic_profilex64 -f mem.dmp linux_pstree"
"vol.py --profile LinuxUbuntu_4_15_0-184-generic_profilex64 -f mem.dmp linux_bash"
usable on .mem files
1st thing to do -> profile -> volatility imageinfo -f triageMemory.mem       #imageinfo plugin
plist plugin per listare i processi del dump
volatility -f triageMemory.mem — profile=Win7SP1x64 netscan -> ottieni l'ip al momento del memory dump
volatility -f triageMemory.mem — profile=Win7SP1x64 dlllist > dllList.txt -> list dll e i processi eseguiti
volatility -f triageMemory.mem — profile=Win7SP1x64 hashdump > hashDump.txt -> extract passowrd hash in the registries
volatility -f triageMemory.mem — profile=Win7SP1x64 vadinfo > vadinfo.txt -> vadinfo da rivedere
volatility -f triageMemory.mem — profile=Win7SP1x64 cmdline -> command line arguments eseguiti dai processi

#dumping the executable
volatility -f triageMemory.mem — profile=Win7SP1x64 procdump -D dump/ -p 3496
0xfffffa8005a1d9e0 0x0000000000400000 UWkpjFjDzM.exe OK: executable.3496.exe
md5sum executable.3496.exe

ZIP ENCRYPTED
https://www.acceis.fr/cracking-encrypted-archives-pkzip-zip-zipcrypto-winzip-zip-aes-7-zip-rar/

FTK IMAGER - windows only
analyze images

MFT FILES
https://github.com/EricZimmerman/MFTECmd -> MFTECmd.exe -f z.mft --csv c:\temp
https://www.sans.org/tools/mftexplorer/
https://github.com/kacos2000/MFT_Browser

FILE SYSTEM ANALYSIS
cat etc/passwd | grep 'bash'
home/<name>/.bash_history
tree | grep -C 5 firefox
https://support.mozilla.org/en-US/kb/profiles-where-firefox-stores-user-data
https://enscribe.dev/blog/sekaictf-2022/forensics-writeup-compilation#intro       #nice ideas

AUDIO/SPECTRUM ANALYSIS
https://www.lifewire.com/what-is-an-ogg-file-2622795
https://convertio.co/it/mp3-converter/
https://academo.org/demos/spectrum-analyzer/
https://sonicvisualiser.org/
https://online-barcode-reader.inliteresearch.com/
